@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.JSInterop
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@implements IDisposable
@code {
    private HubConnection hubConnection;
    private List<string> messages = new List<string>();
    private string userInput;
    private string messageInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/infohub"))
            .Build();

        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            // sends a notify to JavaScript
            JSRuntime.InvokeVoidAsync("Notify", user, message);

            //var encodedMsg = $"{user}: {message}";
            //messages.Add(encodedMsg);
            //StateHasChanged();
        });

        await hubConnection.StartAsync();
    }

    //Task Send() =>
    //    hubConnection.SendAsync("SendMessage", userInput, messageInput);

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }
}
