<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:Actions="clr-namespace:MahApps.Metro.Actions;assembly=MahApps.Metro"
                    xmlns:editors="clr-namespace:FMT.Controls.Editors"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:System="clr-namespace:System;assembly=netstandard"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:iconPacks1="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.Material">
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle Name="Bg" Fill="{TemplateBinding Control.Background}" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="6" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon" Margin="1" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <Path Name="GlyphPanel" Margin="5 0 0 0" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource MahApps.Brushes.CheckmarkFill}" FlowDirection="LeftToRight" Visibility="Collapsed" Data="{StaticResource Checkmark}" />
                <ContentPresenter Grid.Column="2" Margin="{TemplateBinding Control.Padding}" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <TextBlock Grid.Column="4" Margin="{TemplateBinding Control.Padding}" Text="{TemplateBinding MenuItem.InputGestureText}" Visibility="Collapsed" />
                <Path Grid.Column="5" Margin="4 0 0 0" VerticalAlignment="Center" Fill="{DynamicResource MahApps.Brushes.Text}" Data="{StaticResource RightArrow}">
                    <FrameworkElement.LayoutTransform>
                        <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                    </FrameworkElement.LayoutTransform>
                </Path>
            </Grid>
            <Grid Margin="2 0 1 0">
                <Popup Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-1" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                    <Grid Name="SubMenuRoot">
                        <Rectangle Name="LayoutRoot" Fill="{TemplateBinding Control.Background}" />
                        <ContentControl Name="SubMenuBorder" IsTabStop="False" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <ScrollViewer Name="SubMenuScrollViewer" CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <ItemsPresenter Name="ItemsPresenter" Margin="0" Grid.IsSharedSizeScope="True" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </ContentControl>
                    </Grid>
                </Popup>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="MenuItem.Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="MenuItem.IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                <Setter TargetName="LayoutRoot" Value="{DynamicResource MahApps.DropShadowEffect.Menu}" Property="UIElement.Effect" />
                <Setter TargetName="SubMenuRoot" Property="FrameworkElement.Margin" Value="0 0 6 6" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
                <Setter TargetName="Bg" Value="{DynamicResource MahApps.Brushes.MenuItem.SelectionFill}" Property="Shape.Fill" />
                <Setter TargetName="Bg" Value="{DynamicResource MahApps.Brushes.MenuItem.SelectionStroke}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Value="{DynamicResource MahApps.Brushes.MenuItem.Foreground.Disabled}" Property="Control.Foreground" />
                <Setter TargetName="GlyphPanel" Value="{DynamicResource MahApps.Brushes.MenuItem.GlyphPanel.Disabled}" Property="Shape.Fill" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{x:Type iconPacks1:PackIconMaterial}" TargetType="{x:Type iconPacks1:PackIconMaterial}" BasedOn="{StaticResource {x:Type iconPacks1:PackIconMaterial}}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{x:Type iconpacks:PackIconMaterialLight}" xmlns:iconpacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.MaterialLight" TargetType="{x:Type iconpacks:PackIconMaterialLight}" BasedOn="{StaticResource {x:Type iconpacks:PackIconMaterialLight}}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{x:Type iconpacks:PackIconMaterialDesign}" xmlns:iconpacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.MaterialDesign" TargetType="{x:Type iconpacks:PackIconMaterialDesign}" BasedOn="{StaticResource {x:Type iconpacks:PackIconMaterialDesign}}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{x:Type iconpacks:PackIconFontAwesome}" xmlns:iconpacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.FontAwesome" TargetType="{x:Type iconpacks:PackIconFontAwesome}" BasedOn="{StaticResource {x:Type iconpacks:PackIconFontAwesome}}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{x:Type iconpacks:PackIconOcticons}" xmlns:iconpacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.Octicons" TargetType="{x:Type iconpacks:PackIconOcticons}" BasedOn="{StaticResource {x:Type iconpacks:PackIconOcticons}}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{x:Type iconpacks:PackIconModern}" xmlns:iconpacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.Modern" TargetType="{x:Type iconpacks:PackIconModern}" BasedOn="{StaticResource {x:Type iconpacks:PackIconModern}}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{x:Type iconpacks:PackIconEntypo}" xmlns:iconpacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.Entypo" TargetType="{x:Type iconpacks:PackIconEntypo}" BasedOn="{StaticResource {x:Type iconpacks:PackIconEntypo}}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{x:Type iconpacks:PackIconSimpleIcons}" xmlns:iconpacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.SimpleIcons" TargetType="{x:Type iconpacks:PackIconSimpleIcons}" BasedOn="{StaticResource {x:Type iconpacks:PackIconSimpleIcons}}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{x:Type iconpacks:PackIconWeatherIcons}" xmlns:iconpacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.WeatherIcons" TargetType="{x:Type iconpacks:PackIconWeatherIcons}" BasedOn="{StaticResource {x:Type iconpacks:PackIconWeatherIcons}}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{x:Type iconpacks:PackIconTypicons}" xmlns:iconpacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.Typicons" TargetType="{x:Type iconpacks:PackIconTypicons}" BasedOn="{StaticResource {x:Type iconpacks:PackIconTypicons}}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{x:Type iconpacks:PackIconFeatherIcons}" xmlns:iconpacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.FeatherIcons" TargetType="{x:Type iconpacks:PackIconFeatherIcons}" BasedOn="{StaticResource {x:Type iconpacks:PackIconFeatherIcons}}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{x:Type iconpacks:PackIconIonicons}" xmlns:iconpacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.Ionicons" TargetType="{x:Type iconpacks:PackIconIonicons}" BasedOn="{StaticResource {x:Type iconpacks:PackIconIonicons}}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{x:Type iconpacks:PackIconJamIcons}" xmlns:iconpacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.JamIcons" TargetType="{x:Type iconpacks:PackIconJamIcons}" BasedOn="{StaticResource {x:Type iconpacks:PackIconJamIcons}}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{x:Type iconpacks:PackIconUnicons}" xmlns:iconpacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.Unicons" TargetType="{x:Type iconpacks:PackIconUnicons}" BasedOn="{StaticResource {x:Type iconpacks:PackIconUnicons}}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{x:Type iconpacks:PackIconVaadinIcons}" xmlns:iconpacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.VaadinIcons" TargetType="{x:Type iconpacks:PackIconVaadinIcons}" BasedOn="{StaticResource {x:Type iconpacks:PackIconVaadinIcons}}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{x:Type iconpacks:PackIconCodicons}" xmlns:iconpacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.Codicons" TargetType="{x:Type iconpacks:PackIconCodicons}" BasedOn="{StaticResource {x:Type iconpacks:PackIconCodicons}}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    </Style>
    <Path x:Key="AssignIcon" Data="M0,6 L0,6 L4,6 L4,3 L9,7.5 L4,12 L4,9 L0,9" />
    <Path x:Key="RemoveButtonIcon" Data="M2.9879313,0.07751471 L1.7192748,1.3461711 L0.45113524,0.07803148 L0.07803141,0.4511353 L1.346171,1.7192749 L0.07751465,2.9879314 L0.45165202,3.3620686 L1.7203084,2.0934123 L2.988448,3.3615519 L3.3615518,2.9884481 L2.0934122,1.7203085 L3.3620685,0.45165208" />
    <Path x:Key="AddButtonIcon" Data="M1.4552083,0.26354987 L1.4552083,1.4552084 L0.2635498,1.4552084 L0.2635498,1.9843751 L1.4552083,1.9843751 L1.4552083,3.1760335 L1.984375,3.1760335 L1.984375,1.9843751 L3.1760334,1.9843751 L3.1760334,1.4552084 L1.984375,1.4552084 L1.984375,0.26354987" />
    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MahApps.Styles.CheckBox.Win10}">
        <Setter Property="MinHeight" Value="0" />
    </Style>
    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource CheckBoxStyle}" />
    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button}">
        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal" />
        <Setter Property="FontSize" Value="12" />
    </Style>
    <SolidColorBrush x:Key="MahApps.Brushes.BackgroundSelected" Color="{DynamicResource MahApps.Colors.Accent2}" />
    <SolidColorBrush x:Key="MahApps.Brushes.Border.Selected" Color="{DynamicResource Theme.PrimaryAccentColor}" />
    <SolidColorBrush x:Key="MahApps.Brushes.CloseButton.BackgroundHighlighted" Color="{DynamicResource MahApps.Colors.Highlight}" />
    <SolidColorBrush x:Key="MahApps.Brushes.CloseButton.BackgroundPressed" Color="#084E7D" />
    <SolidColorBrush x:Key="MahApps.Brushes.CloseButton.Stroke" Color="{DynamicResource MahApps.Colors.Gray.MouseOver}" />
    <SolidColorBrush x:Key="MahApps.Brushes.CloseButton.StrokeHighlighted" Color="{DynamicResource MahApps.Colors.IdealForeground}" />
    <Style x:Key="MahApps.Styles.TabItem.VisualStudio" BasedOn="{StaticResource MahApps.Styles.TabItem}" TargetType="{x:Type TabItem}">
        <Setter Property="mah:ControlsHelper.RecognizesAccessKey" Value="False" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Border.Normal}" />
        <Setter Property="mah:TabControlHelper.CloseButtonEnabled" Value="True" />
        <Setter Property="Padding" Value="12 5 12 5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Name="Border" HorizontalAlignment="Stretch" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                        <StackPanel Name="PART_Content" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Orientation="Horizontal">
                            <Controls:ContentControlEx Name="ContentSite" Padding="{TemplateBinding Control.Padding}" Content="{TemplateBinding HeaderedContentControl.Header}" ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderedContentControl.HeaderTemplateSelector}" FontFamily="{TemplateBinding mah:HeaderedControlHelper.HeaderFontFamily}" FontSize="{TemplateBinding mah:HeaderedControlHelper.HeaderFontSize}" FontStretch="{TemplateBinding mah:HeaderedControlHelper.HeaderFontStretch}" FontStyle="{TemplateBinding Control.FontStyle}" FontWeight="{TemplateBinding mah:HeaderedControlHelper.HeaderFontWeight}" Foreground="{TemplateBinding Control.Foreground}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ContentCharacterCasing="{Binding Path=(Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Button Name="PART_CloseButton" VerticalAlignment="Center" IsTabStop="False" Style="{DynamicResource MahApps.Styles.Button.TabItemClose.VisualStudio}" Visibility="{Binding Path=(Controls:TabControlHelper.CloseButtonEnabled), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <Actions:CloseTabItemAction Command="{Binding Path=(Controls:TabControlHelper.CloseTabCommand), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding Path=(Controls:TabControlHelper.CloseTabCommandParameter), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabItem.TabStripPlacement" Value="Left">
                            <Setter TargetName="PART_Content" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabItem.TabStripPlacement" Value="Right">
                            <Setter TargetName="PART_Content" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabItem.IsSelected" Value="true">
                            <Setter Value="{DynamicResource MahApps.Brushes.BackgroundSelected}" Property="Background" />
                            <Setter Value="{DynamicResource MahApps.Brushes.Border.Selected}" Property="BorderBrush" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Value="{DynamicResource MahApps.Brushes.BackgroundHighlighted}" Property="Background" />
                            <Setter Value="{DynamicResource MahApps.Brushes.Border.Highlighted}" Property="BorderBrush" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="False" />
                                <Condition Property="TabItem.IsSelected" Value="False" />
                                <Condition Property="mah:TabControlHelper.CloseButtonEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Hidden" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="TabItem.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Value="{DynamicResource MahApps.Brushes.BackgroundSelected}" Property="Background" />
                            <Setter Value="{DynamicResource MahApps.Brushes.Border.Selected}" Property="BorderBrush" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MahApps.Styles.Button.TabItemClose.VisualStudio" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Margin" Value="0 0 5 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Control.Background}">
                        <Path Name="ButtonPath" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0 L1,1 M0,1 L1,0" Stretch="Uniform" Stroke="{DynamicResource MahApps.Brushes.CloseButton.Stroke}" StrokeEndLineCap="Flat" StrokeStartLineCap="Flat" StrokeThickness="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Value="{DynamicResource MahApps.Brushes.CloseButton.BackgroundHighlighted}" Property="Background" />
                            <Setter TargetName="ButtonPath" Value="{DynamicResource MahApps.Brushes.CloseButton.StrokeHighlighted}" Property="Shape.Stroke" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Value="{DynamicResource MahApps.Brushes.CloseButton.BackgroundPressed}" Property="Background" />
                            <Setter TargetName="ButtonPath" Value="{DynamicResource MahApps.Brushes.CloseButton.Stroke}" Property="Shape.Stroke" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="15" />
    </Style>
    <DataTemplate x:Key="MahApps.Templates.TabItem.Closable.VisualStudio">
        <DockPanel>
            <ContentPresenter VerticalAlignment="Center" Content="{Binding DisplayName}">
                <FrameworkElement.Resources>
                    <ResourceDictionary>
                        <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
                            <Setter Property="FontSize" Value="20" />
                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Foreground}" />
                        </Style>
                    </ResourceDictionary>
                </FrameworkElement.Resources>
            </ContentPresenter>
        </DockPanel>
    </DataTemplate>
    <ControlTemplate x:Key="EditorTool.Templates.TabControl.SingleRow.Horizontal" TargetType="{x:Type TabControl}">
        <Grid KeyboardNavigation.TabNavigation="Local">
            <Grid.RowDefinitions>
                <RowDefinition Name="RowDefinition0" Height="Auto" />
                <RowDefinition Name="RowDefinition1" Height="*" />
            </Grid.RowDefinitions>
            <ScrollViewer Name="HeaderPanelScroll" Grid.Row="0" Panel.ZIndex="1" Controls:ScrollViewerHelper.IsHorizontalScrollWheelEnabled="{TemplateBinding mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled}" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled" Template="{StaticResource MahApps.Templates.ScrollViewer.AnimatedSingleRow}">
                <Grid Name="HeaderPanelGrid">
                    <Controls:Underline Name="Underline" Background="#00FFFFFF" BorderBrush="{TemplateBinding mah:TabControlHelper.UnderlineBrush}" LineThickness="1" Placement="Bottom" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Visibility="Collapsed" />
                    <TabPanel Name="HeaderPanel" IsItemsHost="true" KeyboardNavigation.TabIndex="1" />
                </Grid>
            </ScrollViewer>
            <Border Name="ContentPanel" Grid.Row="1" Grid.Column="0" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                <ContentPresenter Name="PART_SelectedContentHost" Margin="{TemplateBinding Control.Padding}" ContentSource="SelectedContent" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="mah:TabControlHelper.Underlined" Value="TabPanel">
                <Setter TargetName="Underline" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Top">
                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="1" />
                <Setter TargetName="HeaderPanelScroll" Property="Grid.Row" Value="0" />
                <Setter TargetName="HeaderPanelScroll" Property="FrameworkElement.Margin" Value="0 0 2 0" />
                <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="Auto" />
                <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="*" />
                <Setter TargetName="Underline" Property="mah:Underline.Placement" Value="Bottom" />
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                <Setter TargetName="HeaderPanelScroll" Property="Grid.Row" Value="1" />
                <Setter TargetName="HeaderPanelScroll" Property="FrameworkElement.Margin" Value="2 0 2 2" />
                <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
                <Setter TargetName="Underline" Property="mah:Underline.Placement" Value="Top" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="EditorTool.Styles.TabControl.SingleRow" BasedOn="{StaticResource MahApps.Styles.TabControl}" TargetType="{x:Type TabControl}">
        <Setter Property="Template" Value="{DynamicResource EditorTool.Templates.TabControl.SingleRow.Horizontal}" />
        <Setter Property="mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled" Value="True" />
    </Style>
    <DrawingBrush x:Key="gridBackground" Viewport="0,0,64,64" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="#D4D4D4">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0,1,1" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="#9A9A9A" Geometry="M0,0 L0,0.5 L0.5,0.5 L0.5,0.5 L0.5,0.5 L0.5,0" />
                <GeometryDrawing Brush="#9A9A9A" Geometry="M0.5,0.5 L0.5,1 L1,1 L1,1 L1,1 L1,0.5" />
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <ControlTemplate x:Key="categoryToggleButton" TargetType="{x:Type ToggleButton}">
        <Border Background="#FFFFFFFF" Height="9" Width="9" BorderThickness="1" BorderBrush="#FF000000">
            <Grid>
                <Path Name="expanded" Fill="#FF000000" Height="7" Width="7" Data="M1,4 L1,4 L6,4 L6,3 L1,3" />
                <Path Name="collapsed" Fill="#FF000000" Height="7" Width="7" Data="M3,1 L3,1 L3,6 L4,6 L4,1" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="collapsed" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="itemToggleButton" TargetType="{x:Type ToggleButton}">
        <Border Background="#00FFFFFF" Height="16" Padding="5" Width="16">
            <Path Name="ExpandPath" Fill="{DynamicResource MahApps.Brushes.Button.Flat.Foreground.Pressed}" Stroke="{DynamicResource MahApps.Brushes.Button.Flat.Foreground.Pressed}">
                <Path.Data>
                    <PathGeometry Figures="M0,0 L0,6 L6,0 z" />
                </Path.Data>
                <UIElement.RenderTransform>
                    <RotateTransform Angle="135" CenterY="3" CenterX="3" />
                </UIElement.RenderTransform>
            </Path>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="180" CenterY="3" CenterX="3" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ItemsControlVirtualizedStyle" TargetType="{x:Type ItemsControl}">
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
                        <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>